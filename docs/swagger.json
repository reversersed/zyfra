{
    "consumes": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "title": "SSO API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:80",
    "basePath": "/api/",
    "paths": {
        "/sessions": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Log in user with login and password",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Generated session key",
                        "schema": {
                            "$ref": "#/definitions/handlers.HandleLoginCommand.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Received bad request body",
                        "schema": {
                            "$ref": "#/definitions/models.RequestError"
                        }
                    },
                    "404": {
                        "description": "User was not found or password is incorrect",
                        "schema": {
                            "$ref": "#/definitions/models.RequestError"
                        }
                    }
                }
            }
        },
        "/sessions/{session}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Authenticate user with session key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session key",
                        "name": "session",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Session is valid"
                    },
                    "400": {
                        "description": "Received bad request body",
                        "schema": {
                            "$ref": "#/definitions/models.RequestError"
                        }
                    },
                    "401": {
                        "description": "Session is invalid",
                        "schema": {
                            "$ref": "#/definitions/models.RequestError"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Delete session by provided key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session key",
                        "name": "session",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Session deleted"
                    },
                    "400": {
                        "description": "Received bad request body",
                        "schema": {
                            "$ref": "#/definitions/models.RequestError"
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "$ref": "#/definitions/models.RequestError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.HandleLoginCommand.LoginResponse": {
            "type": "object",
            "properties": {
                "session": {
                    "type": "string"
                }
            }
        },
        "models.LoginCommand": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.RequestError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}